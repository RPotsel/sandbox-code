global
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket is defined %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot is defined %}
  chroot {{ haproxy_chroot }}
{% endif %}
  stats timeout 30s
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect {{ haproxy_connect_timeout }}
  timeout client {{ haproxy_client_timeout }}
  timeout server {{ haproxy_server_timeout }}
  timeout http-request {{ haproxy_http_request_timeout }}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

{% for frontend in haproxy_frontends %}
frontend {{ frontend }}
{% if haproxy_frontends[frontend].mode is defined %}
  mode {{ haproxy_frontends[frontend].mode }}
{% endif %}
{% if haproxy_frontends[frontend].option is defined %}
  option {{ haproxy_frontends[frontend].option }}
{% endif %}
  bind {{ haproxy_frontends[frontend].bind }}
  default_backend {{ haproxy_frontends[frontend].default_backend }}

{% endfor %}

{% for backend in haproxy_backends %}
backend {{ backend }}
{% if haproxy_backends[backend].mode is defined %}
  mode {{ haproxy_backends[backend].mode }}
{% endif %}
{% if haproxy_backends[backend].option is defined %}
  option {{ haproxy_backends[backend].option }}
{% endif %}
{% if haproxy_backends[backend].balance is defined %}
  balance {{ haproxy_backends[backend].balance }}
{% endif %}
{% for server in haproxy_backends[backend].servers %}
  server {{ server }} {{ hostvars[server]['ansible_host'] }}:{{ haproxy_backends[backend].port }}
{% endfor %}

{% endfor %}
